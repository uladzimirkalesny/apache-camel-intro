<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://camel.apache.org/schema/spring
            http://camel.apache.org/schema/spring/camel-spring.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="examples.filter.processors"/>

    <bean id="jms" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="vm://localhost"/>
            </bean>
        </property>
    </bean>

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <route>
            <from uri="file:src/main/java/examples/filter/data?noop=true"/>
            <choice>
                <when>
                    <simple>${header.CamelFileName} regex '^.*xml$'</simple>
                    <to uri="file:src/main/java/examples/filter/data/xml"/>
                </when>
                <otherwise>
                    <to uri="file:src/main/java/examples/filter/data/other"/>
                    <stop/>
                </otherwise>
            </choice>
        </route>

        <route>
            <from uri="file:src/main/java/examples/filter/data/xml"/>
            <filter>
                <xpath>/order[not(@test)]</xpath>
                <process ref="orderLogger"/>
                <to uri="jms:xmlOrders"/>
            </filter>

        </route>
    </camelContext>

</beans>